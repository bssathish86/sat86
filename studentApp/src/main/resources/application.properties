
## Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.url = jdbc:mysql://localhost:3306/sys?autoReconnect=true&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.username = root
spring.datasource.password = rootadmin
spring.datasource.driverClassName=com.mysql.jdbc.Driver
## Hibernate Properties


# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect

# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

#security.oauth2.resource.filter-order = 3

#server.port= 9596
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration

security.oauth2.client.clientId=821922555511-tk6fa2togtdbllnbifhr2d7gs4rb1noq.apps.googleusercontent.com
security.oauth2.client.clientSecret=_k4kxXK8PiTYROUPPY77Fasj
security.oauth2.client.accessTokenUri=https://www.googleapis.com/oauth2/v3/token
security.oauth2.client.userAuthorizationUri: https://accounts.google.com/o/oauth2/auth
security.oauth2.client.tokenName=oauth_token
security.oauth2.client.authenticationScheme=query
security.oauth2.client.clientAuthenticationScheme=form
security.oauth2.client.scope=profile email
security.oauth2.resource.userinfoUri=https://www.googleapis.com/userinfo/v2/me
security.oauth2.resource.preferTokenInfo=false



